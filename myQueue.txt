public class MyQueue<T> {
  Stack<T> NewStack;
  Stack<T> OldStack;
  public MyQueue() {
    NewStack = new Stack<T>();
    OldStack = new Stack<T>();
  }
  
  public void euqueue(T val) {
    NewStack.push(val);
  }
  
  public int size() {
    return NewStack.size() + OldStack.size();
  }
  
  private void shiftStacks() {
    if(OldStack.isEmpty()) {
      while(!NewStack.isEmpty()) {
        OldStack.push(NewStack.pop());
      }
    }
  }
  
  public T peek() {
    shiftStacks();
    return OldStack.peek();
  }
  
  public T dequeue() {
    shiftStacks();
    return OldStack.pop();
  }
}